# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.define "foo-centos7" do |config|
    config.vm.box = "centos/7"
    config.vm.hostname = "foo-centos7"

    # Vagrant >= 1.7 wants to replace the insecure_key with public boxes, but
    # there is a bug in that implentation so we just allow the insecure_key
    # anyway.
    config.ssh.insert_key = false

    config.vm.box_check_update = false

    config.vm.network "private_network", ip: "67.77.255.112"

    config.vm.synced_folder ".", "/vagrant",
      disabled: false,
      type: "sshfs",
      ssh_opts_append: "-o Compression=yes -o ControlPersist=60s -o ControlMaster=auto",
      sshfs_opts_append: "-o cache=no -o nonempty"

    # config.vm.provision "shell", path: "install.sh"

    config.vm.provision "ansible" do |ansible|
      ansible.verbose = "vv"
      ansible.playbook = "playbook.yml"
    end

    config.vm.provider "virtualbox" do |vb|
      #  # Display the VirtualBox GUI when booting the machine
      #  vb.gui = true

      vb.cpus = "1"
      vb.memory = "768"

      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]

      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ] if config.vm.box =~ /xenial|bionic/

    end
  end

  config.vm.define "foo-ubuntu1404" do |config|
    config.vm.box = "ubuntu/trusty64"
    config.vm.hostname = "foo-ubuntu1404"

    # Vagrant >= 1.7 wants to replace the insecure_key with public boxes, but
    # there is a bug in that implentation so we just allow the insecure_key
    # anyway.
    config.ssh.insert_key = false

    config.vm.box_check_update = false

    config.vm.network "private_network", ip: "67.77.255.113"

    config.vm.synced_folder ".", "/vagrant",
      disabled: false,
      type: "sshfs",
      ssh_opts_append: "-o Compression=yes -o ControlPersist=60s -o ControlMaster=auto",
      sshfs_opts_append: "-o cache=no -o nonempty"

    # config.vm.provision "shell", path: "install.sh"

    config.vm.provision "ansible" do |ansible|
      ansible.verbose = "vv"
      ansible.playbook = "playbook.yml"
    end

    config.vm.provider "virtualbox" do |vb|
      #  # Display the VirtualBox GUI when booting the machine
      #  vb.gui = true

      vb.cpus = "1"
      vb.memory = "768"

      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]

      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ] if config.vm.box =~ /xenial|bionic/

    end
  end

end
